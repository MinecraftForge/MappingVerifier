plugins {
    id 'java-library'
    id 'idea'
    id 'eclipse'
    id 'maven-publish'
    id 'net.minecraftforge.licenser' version '1.1.1'
    id 'net.minecraftforge.gradleutils' version '2.4.4'
    id 'com.gradleup.shadow' version '8.3.6'
}

group = 'net.minecraftforge'
version = gitversion.version.tagOffset
println "Version: $version"

java {
    toolchain.languageVersion = JavaLanguageVersion.of(8)
    withSourcesJar()
}

repositories {
    maven gradleutils.forgeMaven
    mavenCentral()
}

dependencies {
    implementation libs.bundles.asm
    implementation libs.jopt
    //Because tons of projects all paarsing SRG files is annoying
    api libs.srgutils
}

changelog {
    from '2.0'
}

license {
    header project.file('LICENSE-header.txt')
    include '**/*.java'
    newLine false
}

jar {
    manifest {
        // TODO [MappingVerifier] Make Main class fatjar only in 3.0?
        attributes(['Main-Class': 'net.minecraftforge.mappingverifier.Main'] as LinkedHashMap)

        attributes([
            'Specification-Title'   : 'Mapping Verifier',
            'Specification-Vendor'  : 'Forge Development LLC',
            'Specification-Version' : gitversion.version.info.tag,
            'Implementation-Title'  : 'Mapping Verifier',
            'Implementation-Vendor' : 'Forge Development LLC',
            'Implementation-Version': project.version
        ] as LinkedHashMap, 'net/minecraftforge/mappingverifier')
    }
}

tasks.named('shadowJar', com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar).configure {
    archiveClassifier = 'fatjar'
}

artifacts {
    archives shadowJar
}

publishing {
    publications.register('mavenJava', MavenPublication) {
        from components.java

        artifactId = 'mapping-verifier'
        changelog.publish(it)

        pom {
            name = 'MappingVerifier'
            description = 'Utility to verify mapping files do not mess up bytecode access/layout.'

            gradleutils.pom.gitHubDetails = pom

            license gradleutils.pom.licenses.LGPLv2_1

            developers {
                gradleutils.pom.Developers.LexManos
            }
        }
    }

    repositories {
        maven gradleutils.publishingForgeMaven
    }
}

idea.module { downloadSources = downloadJavadoc = true }
